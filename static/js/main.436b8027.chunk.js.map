{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","items","selected","good","setState","prevState","unselected","removeSelect","selectedItem","filter","renderBoxGoods","length","slice","join","this","className","map","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,MAAO,CAAC,Q,EAGVC,SAAW,SAACC,GACV,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,MAAM,GAAD,mBAAMI,EAAUJ,OAAhB,CAAuBE,S,EAIhCG,WAAa,WACX,EAAKF,SAAS,CAAEH,MAAO,M,EAGzBM,aAAe,SAACC,GACd,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,MAAOI,EAAUJ,MAAMQ,QAAO,SAAAN,GAAI,OAAIA,IAASK,U,EAInDE,eAAiB,WACf,IAAQT,EAAU,EAAKD,MAAfC,MAER,OAAqB,IAAjBA,EAAMU,OACD,oBAGY,IAAjBV,EAAMU,OACF,GAAN,OAAUV,EAAM,GAAhB,gBAGI,GAAN,OAAUA,EAAMW,MAAM,GAAI,GAAGC,KAAK,MAAlC,2BACYZ,EAAMW,OAAO,GADzB,kB,4CAIF,WAA2B,IAAD,OAChBX,EAAUa,KAAKd,MAAfC,MAER,OACE,sBAAKc,UAAU,2BAAf,UAEE,oBAAIA,UAAU,QAAd,SACGD,KAAKJ,mBAGR,oBAAIK,UAAU,UAAd,SACGjB,EAAgBkB,KAAI,SAACb,GACpB,OACE,qBAEEY,UAAS,eAAUd,EAAMgB,SAASd,GAC9B,eAAiB,IAHvB,UAKGA,EAED,wBACEe,KAAK,SACLH,UAAU,SACVI,QACElB,EAAMgB,SAASd,GACX,kBAAM,EAAKI,aAAaJ,IACxB,kBAAM,EAAKD,SAASC,IAN5B,SASGF,EAAMgB,SAASd,GAAQ,SAAW,aAfhCA,QAsBZF,EAAMU,OAAS,GACd,wBACEO,KAAK,SACLC,QAASL,KAAKR,WACdS,UAAU,mBAHZ,yC,GAzEQK,IAAMC,WAsFTtB,I,MCtGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.436b8027.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice-cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  items: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    items: ['Jam'],\n  };\n\n  selected = (good: string) => {\n    this.setState((prevState) => ({\n      items: [...prevState.items, good],\n    }));\n  };\n\n  unselected = () => {\n    this.setState({ items: [] });\n  };\n\n  removeSelect = (selectedItem: string) => {\n    this.setState((prevState) => ({\n      items: prevState.items.filter(good => good !== selectedItem),\n    }));\n  };\n\n  renderBoxGoods = () => {\n    const { items } = this.state;\n\n    if (items.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (items.length === 1) {\n      return `${items[0]} is selected`;\n    }\n\n    return `${items.slice(0, -1).join(', ')}\n          and ${items.slice(-1)} are selected`;\n  };\n\n  render(): React.ReactNode {\n    const { items } = this.state;\n\n    return (\n      <div className=\"container is-max-desktop\">\n\n        <h1 className=\"title\">\n          {this.renderBoxGoods()}\n        </h1>\n\n        <ul className=\"display\">\n          {goodsFromServer.map((good) => {\n            return (\n              <li\n                key={good}\n                className={`list ${items.includes(good)\n                  ? 'list__active' : ''}`}\n              >\n                {good}\n\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={\n                    items.includes(good)\n                      ? () => this.removeSelect(good)\n                      : () => this.selected(good)\n                  }\n                >\n                  {items.includes(good) ? 'Remove' : 'Select'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n\n        {items.length > 0 && (\n          <button\n            type=\"button\"\n            onClick={this.unselected}\n            className=\"button is-danger\"\n          >\n            Clear Selected Items\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}